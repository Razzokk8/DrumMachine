[{"/home/user/Desktop/DrumMachine/src/index.js":"1","/home/user/Desktop/DrumMachine/src/App.js":"2"},{"size":221,"mtime":1641202584267,"results":"3","hashOfConfig":"4"},{"size":6396,"mtime":1641202584267,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kav9yx",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"10"},"/home/user/Desktop/DrumMachine/src/index.js",[],"/home/user/Desktop/DrumMachine/src/App.js",["11"],"import './App.scss';\nimport React from 'react'\n\nconst bankOne = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  }\n];\n\nconst bankTwo = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Chord-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Chord-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Chord-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Shaker',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: 'Punchy-Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Side-Stick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Snare',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n  }\n];\n\nconst soundsName = {\n  heaterKit: \"Heater Kit\",\n  smoothPianoKit: \"Smooth Piano Kit\"\n};\n\nconst soundsGroup = {\n  heaterKit: bankOne,\n  smoothPianoKit: bankTwo\n}\n\nconst KeyboardKey = ( { power, play, sound: { id, keyTrigger, url, keyCode } } ) => {\n \n\n  React.useEffect(()=> {\n    console.log(url)\n    const handleKeydown = (e) => {\n    \n    if(e.keyCode === keyCode){\n      play(keyTrigger, id, url)\n    }\n  }\n      document.addEventListener(\"keydown\", handleKeydown) \n  return () => {\n      document.removeEventListener(\"keydown\", handleKeydown) \n  }\n  });\n\n  return (\n    <button value='test' id={keyCode} className='drum-pad' onClick={() => play(keyTrigger, id, url)} > \n      <audio className='clip' id={ keyTrigger } src={url} />\n      { keyTrigger }\n    </button>\n  )\n}\n\nconst Keyboard = ({ play, sounds, power }) => (\n  <div className='keyboard'>\n  { power \n   ? sounds.map((sound) => <KeyboardKey  sound={sound} play={play} power={power} /> )\n   : sounds.map((sound) => <KeyboardKey  sound={{...sound, url : '#' }} play={play} power={power}/> )\n   }\n  </div>\n)\n\nconst BankControle = ({ id, name, changeSoundBank, volume, handleVolumeChange, power, off, setSounds }) => (\n\n  <div className='controle'>\n  <button id='acc' onClick={off}>{ power ? \"ON\" : \"OFF\"}</button>\n  <div id='display'>\n  <h2 className='dline1'>{name}</h2>\n    <h2 className='dline2'>{id}</h2>\n    </div>\n    <button id='bcc' onClick={changeSoundBank} >BANK 1/2</button>\n    <input max='1' \n            min='0' \n            step='0.01' \n            type='range' \n            value={volume} \n            onChange={handleVolumeChange} />\n    <h2 className='dline3'>Volume: {Math.round(volume * 100)}</h2>\n  </div>\n)\n\nconst Credit = () => (\n  <div className='credit'>\n    <a href='https://www.freecodecamp.org/riccardolimiti' target=\"_blank\">Riccardo Limiti &copy; 2021</a>\n  </div>\n)\n\nconst App = () => {\n  const [power, setPower] = React.useState(true);\n  const [volume, setVolume] = React.useState(0.75);\n  const [soundName, setSoundName ] = React.useState(\"\");\n  const [soundType, setSoundType] = React.useState(\"heaterKit\");\n  const [sounds, setSounds] = React.useState(soundsGroup[soundType]);\n\n  const offFunction = () => {\n    setPower(!power)     \n  }\n  const handleVolumeChange = e => {  \n    setVolume(e.target.value)\n  }\n\n  const styleActiveKey = (audio) => {\n    audio.parentElement.style.backgroundColor = \"#000000\"\n    audio.parentElement.style.color = \"#ffffff\"\n  }\n\n  const deactivateAudio = (audio) => {\n    setTimeout(() => {\n    audio.parentElement.style.backgroundColor = \"#ffffff\"\n    audio.parentElement.style.color = \"#000000\"\n    }, 200)\n  }\n\n  const play = (keyTrigger, sound, url) => {\n    setSoundName(sound)\n    const audio = document.getElementById(keyTrigger)\n    styleActiveKey(audio)\n    if(url !== '#'){\n      audio.currentTime = 0\n      audio.play()\n      deactivateAudio(audio)\n    } \n  }\n  const changeSoundBank = () => {\n    setSoundName('')\n    if (soundType === \"heaterKit\"){\n      setSoundType(\"smoothPianoKit\")\n      setSounds(soundsGroup.smoothPianoKit)\n    } else {\n      setSoundType(\"heaterKit\")\n      setSounds(soundsGroup.heaterKit)\n    }\n  }\n\n  const setKeyVolume = () => {\n    const audios = sounds.map(sound => document.getElementById(sound.keyTrigger))\n    console.log(audios)\n    audios.forEach(audio => {\n      if(audio){\n        console.log(audio)\n        audio.volume = volume\n      }\n    })\n  }\n\n  React.useEffect(()=> {\n    setKeyVolume()\n  })\n\n  return (\n  <div id='drum-machine'>\n   \n    <div className='wrapper'>\n\n    <Keyboard play={ play } sounds={sounds} power={power} />\n\n    <BankControle off={offFunction} power={power}\n    volume={volume} handleVolumeChange={handleVolumeChange} \n    id={soundName} name={soundsName[soundType]} changeSoundBank={changeSoundBank}/>\n    \n    <Credit />\n\n    </div>\n  </div>\n  )\n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":183,"column":5,"nodeType":"14","messageId":"15","endLine":183,"endColumn":75,"fix":"16"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"17","text":"18"},[4337,4337]," rel=\"noreferrer\""]